<?php

namespace App\Models;

use Illuminate\Database\Eloquent\Model;
use Illuminate\Database\Eloquent\Builder;
use Illuminate\Database\Eloquent\SoftDeletes;
use Illuminate\Database\Eloquent\Factories\HasFactory;

class Article extends Model
{
    use HasFactory;
    use HasFactory, SoftDeletes;

    protected $fillable = ['libelle', 'price', 'quantity'];
    protected $hidden = ['created_at', 'updated_at', 'deleted_at',];


    public function dettes()
    {
        return $this->belongsToMany(Dette::class)->withPivot(['quantity', 'price']);
    }


    public function scopeAvailable(Builder $query, int $quantite): Builder
    {
        return $query->where('quantity', '>=', $quantite);
    }

    public function scopeIsDisponible(Builder $query, string $disponible): Builder
    {
        if ($disponible === 'oui') {
            return $query->where('quantity', '>', 0);
        } elseif ($disponible === 'non') {
            return $query->where('quantity', 0);
        }
        return $query;
    }


    public function scopeByLibelle(Builder $query, string $libelle): Builder
    {
        return $query->where('libelle', 'like', "%{$libelle}%");
    }
}















///


<?php

use Illuminate\Support\Facades\Schema;
use Illuminate\Database\Schema\Blueprint;
use Illuminate\Database\Migrations\Migration;

return new class extends Migration
{
    /**
     * Run the migrations.
     */
    public function up(): void
    {
        Schema::create('articles', function (Blueprint $table) {
            $table->id();
            $table->string('libelle')->unique();
            $table->integer('price');
            $table->integer('quantity');
            $table->softDeletes(); 
            $table->timestamps();
        });
    }

    /**
     * Reverse the migrations.
     */
    public function down(): void
    {
        Schema::dropIfExists('articles');
    }
};